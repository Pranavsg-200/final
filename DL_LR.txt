# Rough Code for Practical Exam

# Importing libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from keras.models import Sequential
from keras.layers import Dense
from sklearn.metrics import mean_squared_error, mean_absolute_error

# Load dataset
data = pd.read_csv('housing_data.csv')

# Split dataset into features (X) and target variable (y)
X = data.drop('MEDV', axis=1)
y = data['MEDV']

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Define neural network model
model = Sequential()
model.add(Dense(128, activation='relu', input_dim=13))
model.add(Dense(64, activation='relu'))
model.add(Dense(1))

# Compile model
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])

# Train model
history = model.fit(X_train_scaled, y_train, epochs=100, validation_split=0.05)

# Evaluate model
y_pred = model.predict(X_test_scaled)
mse_nn = mean_squared_error(y_test, y_pred)
mae_nn = mean_absolute_error(y_test, y_pred)

# Print evaluation metrics
print('Mean squared error on test data:', mse_nn)
print('Mean absolute error on test data:', mae_nn)
